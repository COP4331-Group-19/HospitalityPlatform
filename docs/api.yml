openapi: 3.0.0
info:
  title: HospitalityPlatform API
  version: 1.0.0
  description: >-
    The API documentation for HospitalityPlatform, a cross-platform customer
    service and hotel management platform. <br><br>Please note that all API
    documentation will be done with a local instance of Swagger, will use
    OpenAPI 3.0.0, and [can be found on our
    GitHub](https://github.com/COP4331-Group-19/HospitalityPlatform).
  x-logo:
    url: ''
servers:
  - url: https://hospitalityplatform.herokuapp.com/api/
    description: Production
  - url: https://virtserver.swaggerhub.com/jeffreydivi/HospitalityPlatform/1.0.0
    description: SwaggerHub API Auto Mocking
paths:
  /account/settings/:
    get:
      tags:
        - Account
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 'Get current account information and settings.'
          x-last-modified: 1625106621162
      operationId: get_account_settings
      summary: Get current account information and settings.
    patch:
      requestBody:
        description: Edit the current account's settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUser'
        required: false
      tags:
        - Account
      operationId: patch_account_settings
      summary: Edit the current account's settings.
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          x-last-modified: 1625107207680
          description: Edit the current account's settings.
          headers: {}
          links: {}
  /account/login/:
    post:
      summary: Create a session.
      requestBody:
        description: Account credentials
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        required: true
      tags:
        - Account
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewJWT'
          description: Return the currently logged-in user's account information.
      operationId: post_account_login
      description: Given a username and password, returns a JWT for the session.
  /account/roles/:
    summary: View and manage an account's role (guest/staff/admin).
    post:
      tags:
        - Admin
      operationId: post_account_roles
      summary: Get the role of a user, given just a username.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: 'Get the role of a user.'
          headers: {}
          links: {}
    patch:
      tags:
        - Admin
      operationId: patch_account_roles
      summary: Set the role of a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
          description: 'Set the role of a user.'
          headers: {}
          links: {}
components:
  schemas:
    Error404:
      required:
        - err_code
        - description
      type: object
      properties:
        err_code:
          description: A numeric error code.
          type: integer
          example: 404
        description:
          description: A human-readable explanation of the error.
          type: string
          example: Asset not found.
    Error403:
      required:
        - err_code
        - description
      type: object
      properties:
        err_code:
          description: A numeric error code.
          type: integer
          example: 403
        description:
          description: A human-readable explanation of the error.
          type: string
          example: You do not have permission to view this asset.
    Error401:
      required:
        - err_code
        - description
      type: object
      properties:
        err_code:
          description: A numeric error code.
          type: integer
          example: 401
        description:
          description: A human-readable explanation of the error.
          type: string
          example: You are not logged in.
    Error400:
      required:
        - err_code
        - description
      type: object
      properties:
        err_code:
          description: A numeric error code.
          type: integer
          example: 400
        description:
          description: A human-readable explanation of the error.
          type: string
          example: Asset already exists.
    Error200:
      required:
        - err_code
        - description
      type: object
      properties:
        err_code:
          description: A numeric error code.
          type: integer
          example: 200
        description:
          description: A human-readable explanation of the error.
          type: string
          example: Success!
    NewJWT:
      required:
        - token
      type: object
      properties:
        token:
          description: The Bearer token
          type: string
          example: Bearer V2UncmUgbm8gc3RyYW5nZXJzIHRvIGxvdmUuIFlvdSBub3cgdGhlIHJ1bGVzIGFuZCBzbyBkbyBJLg==
    Credentials:
      required:
        - username
        - password
      type: object
      properties:
        username:
          description: A username.
          type: string
          example: divi
        password:
          description: A password.
          type: string
          example: CorrectHorseBatteryStaple
    Role:
      required:
        - username
      type: object
      properties:
        username:
          description: The username whom owns the role.
          type: string
          example: divi
        role:
          description: A given user's role.
          type: string
          example: admin
    EditUser:
      description: The user-editable sections of a user entry.
      type: object
      properties:
        username:
          description: The user's username
          type: string
          example: jdivincent
        password:
          description: The user's password, which will be hashed with bcrypt.
          type: string
          example: '**********'
        first_name:
          description: The user's first name
          type: string
          example: Jeffrey
        last_name:
          description: The user's surname.
          type: string
          example: DiVincent
        email:
          description: The user's email.
          type: string
          example: divi@example.com
        phone:
          description: The user's phone number, stored as an integer.
          type: integer
          example: 4078242000
    User:
      description: A complete single user entry.
      allOf:
        - required:
            - user_id
            - first_name
            - username
            - password
            - role
          type: object
          properties:
            user_id:
              description: The user ID.
              type: integer
              example: 7
            role:
              description: The role of the account. Either admin, staff, or guest.
              type: string
              example: admin
            checkin:
              description: The currently active check-in date and time, stored in Unix time.
              type: integer
              example: 1625184007928
            checkout:
              description: The currently active check-out date and time, stored in Unix time.
              type: integer
              example: 1625184007929
            room:
              description: The currently active room number.
              type: string
              example: 345P

        - $ref: '#/components/schemas/EditUser'
  securitySchemes:
    Bearer:
      scheme: bearer
      type: http
  headers: {}
  responses: {}
  parameters: {}
security:
  - Bearer: []
tags:
  - name: Account
    description: User accounts and profiles.
  - name: Admin
    description: Global settings and inventories for the whole instance.
  - name: Guest
    description: Operations to be done exclusively by guests.
  - name: Staff
    description: Operations to be done exclusively by staff.
